!function(t){var e={};function n(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},n.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);class i{addEventListener(t,e){this._handlers||(this._handlers={}),this._handlers[t]||(this._handlers[t]=[]),this._handlers[t].push(e)}removeEventListener(t,e){this._handlers&&this._handlers[t]&&(this._handlers[t]=this._handlers[t].filter(t=>t!==e))}dispatchEvent(t){t.eventName&&this._handlers&&this._handlers[t.eventName]&&this._handlers[t.eventName].forEach(e=>e(t))}}class s extends i{constructor(t){super(),this.iframe=t,this.counter=Date.now(),this.ready=new Promise(this.ready.bind(this)),this._listener=this.onMessage.bind(this),window.addEventListener("message",this._listener);try{this.sendData("getApi")}catch(t){}}ready(t,e){this.rejectTimer=setTimeout(e,15e3),this.resolveReady=(()=>{clearTimeout(this.rejectTimer),delete this.rejectTimer,this.ready=!0,delete this.resolveReady,t()})}destroy(){window.removeEventListener("message",this._listener)}handleEvent(t){this.dispatchEvent(t)}onMessage(t){if(t.source!=this.iframe.contentWindow)return;let e=JSON.parse(t.data);switch(e.type){case"ready":this.sendData("getApi");break;case"event":this.handleEvent(e.data);break;case"api":this.bootstrap(e.data);break;case"methodResponse":this.handlePromise(e.data)}}bootstrap(){this.resolveReady()}send(t,e,n){if(!0!==this.ready&&!n)throw Error("Not ready");return this.pending||(this.pending={}),new Promise((n,i)=>{let s=this.counter++;this.sendData("method",{methodName:t,methodId:s,args:e}),this.pending[s]=[n,i,setTimeout(5e3,i)]})}handlePromise(t){let e=this.pending[t.methodId];if(!e)throw Error("Something really bad happened internally, trying to reference a promise that no longer exists");e[0](t),clearTimeout(e[2]),delete this.pending[t.methodId]}post(t){this.iframe.contentWindow.postMessage(t,"https://www.mixcloud.com")}sendData(t,e){this.post(JSON.stringify({type:t,data:e}))}}class a extends i{constructor(t,e){super(),this.url=t;var n=this.iframe=document.createElement("iframe");n.style.display="none",n.src="https://www.mixcloud.com/widget/iframe/?hide_cover=1&light=1&feed="+escape(t),document.body.appendChild(n),this.ready(),this.duration=0,this.mixcloud=new s(n),this.mixcloud.ready.then(n=>{this.load(t,e).then(t=>{this.getVolume().then(n=>{this.loadAPIData().then(n=>{this.setData(t),this.readyResolve(),e&&this.play()})})})}),this.mixcloud.addEventListener("progress",t=>{t.playback=this,this.dispatchEvent(t)}),this.mixcloud.addEventListener("play",t=>{t.playback=this,this.dispatchEvent(t)}),this.mixcloud.addEventListener("pause",t=>{t.playback=this,this.dispatchEvent(t)}),this.mixcloud.addEventListener("ended",t=>{t.playback=this,this.dispatchEvent(t)}),this.mixcloud.addEventListener("error",t=>{t.playback=this,this.dispatchEvent(t)}),this.mixcloud.addEventListener("buffering",t=>{t.playback=this,this.dispatchEvent(t)})}setData(t){this.data=t}ready(){this.ready=new Promise((t,e)=>{this.readyResolve=t}).then(t=>{delete this.readyResolve})}destroy(){this.mixcloud.destoy(),document.body.removeChild(this.iframe)}load(t,e){return this.mixcloud.send("load",[t,e])}play(){return this.mixcloud.send("play")}pause(){return this.mixcloud.send("pause")}toggle(){return this.mixcloud.send("togglePlay")}seek(t){return this.mixcloud.send("seek",[t])}loadAPIData(){return new Promise((t,e)=>{fetch("https://api.mixcloud.com"+this.url).then(t=>t.json()).then(t=>this.setMetadata(t)).then(e=>t(e)).catch(e=>t(null))})}getVolume(){return this.mixcloud.send("getVolume").then(t=>t.value)}setVolume(t){return this.mixcloud.send("setVolume",[t])}setMetadata(t){return this.duration=t.audio_length,this.title=t.name,this.description=t.description,t}}const r=n(1);class o{constructor(t){this.container=t,this.playback=null,this.loadCSS(),t.innerHTML='\n\t\t\t<div class="insanity-player">\n\t\t\t\t<div class="container">\n\t\t\t\t\t\x3c!-- put some visual here --\x3e\n\t\t\t\t\t<img src="https://insanityradio.com/wp-content/uploads/sites/4/2018/02/IMG_9396-e1518194803312.jpg" />\n\t\t\t\t</div>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<div class="top">\n\t\t\t\t\t\t<input type=range min=0 max=100 step=0.1 class="player-slider position-slider" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bottom">\n\t\t\t\t\t\t<button class="player-button play-button"><i class="fa fa-play"></i></button>\n\t\t\t\t\t\t<div class="timestamp">\n\t\t\t\t\t\t\t<span class="now timestamp-label">00:00:00</span> /\n\t\t\t\t\t\t\t<span class="length-label">01:03:03</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="right volume">\n\t\t\t\t\t\t\t<button class="player-button"><i class="fa fa-volume-up"></i></button>\n\t\t\t\t\t\t\t<input type=range min=0 max=1 value=1 step=0.05 class="player-slider volume-slider" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>',this.containers={mediaContent:t.querySelector(".container"),buttons:{play:t.querySelector(".play-button")},sliders:{position:t.querySelector(".position-slider"),volume:t.querySelector(".volume-slider")},labels:{timestamp:t.querySelector(".timestamp-label"),length:t.querySelector(".length-label")}},this.playing=!1,this.buffering=!0,this.currentTime=0,this.duration=0,this.addListeners(),this.drawAll()}load(t,e){this.playback&&this.playback.destroy(),this.playback=new a(e),this.playback.ready.then(t=>{this.drawAll()}),this.playback.addEventListener("play",t=>this.handlePlay(t)),this.playback.addEventListener("pause",t=>this.handlePause(t)),this.playback.addEventListener("ended",t=>this.handleEnded(t)),this.playback.addEventListener("progress",t=>this.handleProgress(t)),this.playback.addEventListener("buffering",t=>this.handleBuffer(t)),this.playback.addEventListener("error",t=>this.handleError(t))}addListeners(){this.containers.buttons.play.addEventListener("click",()=>{this.playing?this.playback.toggle().then(t=>this.drawAll()):this.playback.play().then(t=>this.drawAll())}),this.containers.sliders.position.addEventListener("mousedown",()=>{this._isMouseDown=!0,this.wasPlaying=this.playing,this.playback.pause()}),this.containers.sliders.position.addEventListener("mouseup",()=>{this._isMouseDown=!1,this.wasPlaying&&this.playback.play(),this.containers.sliders.position.blur()}),this.containers.sliders.position.addEventListener("change",t=>{this.playback.seek(t.target.value)}),this.containers.sliders.volume.addEventListener("change",t=>{this.playback.setVolume(t.target.value)})}loadCSS(){if(!document.getElementById("style_____insanity_player")){var t=document.createElement("style");t.innerHTML=r,t.attributes.id="style_____insanity_player",document.body.appendChild(t)}}handlePlay(){this.playing=!0,this.buffering=!1,this.drawAll()}handlePause(){this.playing=!1,this.buffering=!1,this.drawAll()}handleEnded(){this.playing=!1,this.buffering=!1,this.currentTime=0,this.drawAll()}handleError(){this.playing=!1,this.drawAll()}handleBuffer(){this.playing=!1,this.buffering=!0,this.drawAll()}handleProgress(t){this.currentTime=t.args[0],this.duration!=t.args[1]?(this.duration=t.args[1],this.drawAll()):this.drawMost()}getDuration(){return this.duration||this.playback&&this.playback.duration||0}getOffset(){return this.currentTime||0}drawAll(){let t=this.getDuration();this.containers.sliders.position.max=t||0,this.containers.labels.length.textContent=this.tsToString(t,t>=3600),this.containers.buttons.play.querySelector("i").className="fa fa-"+(this.playing?"pause":"play"),this.playback&&this.playback.getVolume().then(t=>{this.containers.sliders.volume.value=t}),this.drawMost()}drawMost(){this._isMouseDown||(this.containers.sliders.position.value=this.getOffset()||0),this.containers.labels.timestamp.textContent=this.tsToString(this.getOffset(),this.getDuration()>=3600)}tsToString(t,e){return((e=e||!1)?[3600,60,1]:[60,1]).map((e,n)=>("00"+Math.floor(n?t/e%60:t/e)).substr(-2)).join(":")}}n.d(e,"Mixcloud",function(){return s}),n.d(e,"Playback",function(){return a}),n.d(e,"Player",function(){return o}),window.Mixcloud=s,window.Playback=a,window.InsanityPlayer=o},function(t,e){t.exports='input[type=range].player-slider {\n\t-webkit-appearance: none;\n\twidth: 100%;\n\tmargin: 1.95px 0;\n}\n\n.position-slider {\n\topacity: 0.8;\n\ttransition: opacity 0.1s;\n}\n\n.controls:hover .position-slider {\n\topacity: 1;\n}\n\ninput[type=range].player-slider:focus {\n\toutline: none;\n}\ninput[type=range].player-slider::-webkit-slider-runnable-track {\n\twidth: 100%;\n\theight: 6.1px;\n\tcursor: pointer;\n\tbackground: #fe4f16;\n}\ninput[type=range].player-slider::-webkit-slider-thumb {\n\tborder: 1px solid #000000;\n\theight: 10px;\n\twidth: 8px;\n\tborder-radius: 0px;\n\tbackground: #ffffff;\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\tmargin-top: -1.95px;\n}\n\ninput[type=range].player-slider:hover::-webkit-slider-thumb {\n\theight: 12px;\n}\n\ninput[type=range].player-slider:focus::-webkit-slider-runnable-track {\n\tbackground: #fe622f;\n}\ninput[type=range].player-slider::-moz-range-track {\n\twidth: 100%;\n\theight: 6.1px;\n\tcursor: pointer;\n\tbackground: #fe4f16;\n}\ninput[type=range].player-slider::-moz-range-thumb {\n\tborder: 1px solid #000000;\n\theight: 10px;\n\twidth: 8px;\n\tborder-radius: 0px;\n\tbackground: #ffffff;\n\tcursor: pointer;\n\ttransition: height 0.1s ease-out;\n}\n\ninput[type=range].player-slider:hover::-moz-range-thumb {\n\theight: 14px;\n}\n\ninput[type=range].player-slider::-ms-track {\n\twidth: 100%;\n\theight: 6.1px;\n\tcursor: pointer;\n\tbackground: transparent;\n\tborder-color: transparent;\n\tcolor: transparent;\n}\ninput[type=range].player-slider::-ms-fill-lower {\n\tbackground: #f93e01;\n}\ninput[type=range].player-slider::-ms-fill-upper {\n\tbackground: #fe4f16;\n}\ninput[type=range].player-slider::-ms-thumb {\n\tborder: 1px solid #000000;\n\theight: 10px;\n\twidth: 8px;\n\tbackground: #ffffff;\n\tcursor: pointer;\n\theight: 6.1px;\n}\ninput[type=range].player-slider:focus::-ms-fill-lower {\n\tbackground: #fe4f16;\n}\ninput[type=range].player-slider:focus::-ms-fill-upper {\n\tbackground: #fe622f;\n}\n\n.insanity-player {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.insanity-player .container {\n\twidth: 100%;\n\theight: 100%;\n}\n\n.insanity-player .container > * {\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: cover;\n}\n\n.insanity-player .controls {\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\twidth: 100%;\n\toverflow: hidden;\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\tpadding: 5px 10px 10px;\n\tbackground: rgba(20, 20, 20, 0.6);\n}\n\n.insanity-player .controls .top {\n\topacity: 0.8;\n}\n\n.insanity-player .controls .bottom, .insanity-player .controls .right {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n}\n\n.insanity-player .controls .player-button {\n\tbackground: none;\n\tborder: none;\n\tcolor: #FFF;\n\tfont-size: 12pt;\n\tpadding: 5px 20px;\n\topacity: 0.6;\n\tcursor: pointer;\n\ttransition: opacity 0.05s;\n\toutline: none;\n\twidth: 54px;\n}\n\n.insanity-player .controls .right {\n\tmargin-left: auto;\n}\n\n.insanity-player .controls .player-button:hover {\n\topacity: 1;\n}\n\n.insanity-player .controls .timestamp {\n\tcolor: #999;\n\tfont-size: 9.5pt;\n\tfont-family: "Open Sans", "Helvetica Neue", Arial, Verdana, sans-serif;\n\topacity: 0.8;\n}\n\n.insanity-player .controls .timestamp .now {\n\tcolor: #FFF;\n}\n\n.insanity-player .controls .volume-slider {\n\twidth: 50px;\n\topacity: 0;\n\tpointer-events: none;\n\ttransition: opacity 0.2s ease-out;\n}\n\n.insanity-player .controls .volume {\n\toverflow: hidden;\n\twidth: 100px;\n\tposition: relative;\n\tleft: 45px;\n\ttransition: left 0.2s;\n}\n\n.insanity-player .controls .volume:hover {\n\tleft: 0;\n}\n\n.insanity-player .controls .volume:hover .volume-slider {\n\topacity: 1;\n\tpointer-events: inherit;\n}\n\n.insanity-player .controls .volume .player-button {\n\twidth: 55px;\n\ttext-align: center;\n\tpadding: 5px;\n}'}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,